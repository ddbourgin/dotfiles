#############
#  ALIASES  #
#############
# This file contains machine-specific aliases and commands. 
# All machine-agnostic aliases / commands should be defined in zshrc/bashrc

# add various ssh keys to ssh-manager
ssh-add --apple-use-keychain $HOME/.ssh/id_ed25519 > /dev/null

# for Intel processors
# export ARCHFLAGS="-arch x86_64"

# for Apple Silicon
export ARCHFLAGS="-arch arm64"

# https://stackoverflow.com/questions/50168647/multiprocessing-causes-python-to-crash-and-gives-an-error-may-have-been-in-progr
export OBJC_DISABLE_INITIALIZE_FORK_SAFETY=YES

# OSX aliases: use nvim in place of terminal vim
# alias vim="nvim"
# alias v="nvim"

# Preferred editor for local and remote sessions
export EDITOR='nvim'

# copy pwd to clipboard
alias cpwd="pwd | pbcopy"
alias cdp='$(pbpaste)'

# use python3 by default
alias pip="pip3"
alias python="python3"

# -----------
#   Files
# -----------
alias zshrc="nvim ~/.zshrc"
alias vimrc="nvim ~/.vimrc"
alias screenrc="nvim ~/.screenrc"
alias tmuxrc="nvim ~/.tmux.conf"
alias bashrc="nvim ~/.bashrc"
alias aliases="nvim ~/.aliases"
alias nvimrc="nvim ~/.config/nvim/init.lua"

# -----------
# Directories
# -----------
alias tmp="cd /tmp"
alias desk="cd ~/Desktop/"
alias dl="cd ~/Downloads/"
alias notes="cd ~/Dropbox/notes/tex"
alias apps="cd /Applications/"
alias snippets="cd ~/dotfiles/vim/bundle/vim-snippets/Ultisnips"

##########
#  PATH  #
##########
export PATH=$PATH:/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin:/usr/texbin
export PATH=$PATH:/Library/TeX/Distributions/Programs/texbin # for LaTeX at cmd line
export PATH=$HOME/.local/bin:$PATH # local pip packages take precedence
export PATH=$HOME/miniforge3/bin:$PATH # add miniconda to beginning of path

#######################################################################
#                          Package Managers                           #
#######################################################################
# node version manager
export NVM_DIR="$HOME/.nvm"
[ -s "/opt/homebrew/opt/nvm/nvm.sh" ] && \. "/opt/homebrew/opt/nvm/nvm.sh"
[ -s "/opt/homebrew/opt/nvm/etc/bash_completion.d/nvm" ] && \. "/opt/homebrew/opt/nvm/etc/bash_completion.d/nvm"

# >>> conda initialize >>>
# !! Contents within this block are managed by 'conda init' !!
__conda_setup="$('$HOME/miniforge3/bin/conda' 'shell.zsh' 'hook' 2> /dev/null)"
if [ $? -eq 0 ]; then
    eval "$__conda_setup"
else
    if [ -f "$HOME/miniforge3/etc/profile.d/conda.sh" ]; then
        . "$HOME/miniforge3/etc/profile.d/conda.sh"
    else
        export PATH="$HOME/miniforge3/bin:$PATH"
    fi
fi
unset __conda_setup
# <<< conda initialize <<<

# locate homebrew and homebrew-installed files
eval "$(/opt/homebrew/bin/brew shellenv)"

# Load RVM into a shell session *as a function*
if [[ -a "$HOME/.rvm/scripts/rvm" ]]; then 
    . "$HOME/.rvm/scripts/rvm";
fi

# source Haskell / Tidal environment
if [[ -a "${HOME}/.ghcup/env" ]]; then
    . $HOME/.ghcup/env;
fi

# initialize shell integration if using iterm2
if [[ -a "${HOME}/.iterm2_shell_integration.zsh" ]]; then
    . "${HOME}/.iterm2_shell_integration.zsh";
fi

# tabtab source for electron-forge package
# uninstall by removing these lines or running `tabtab uninstall electron-forge`
if [[ -a "/usr/local/lib/node_modules/electron-forge/node_modules/tabtab/.completions/electron-forge.zsh" ]]; then
    . "/usr/local/lib/node_modules/electron-forge/node_modules/tabtab/.completions/electron-forge.zsh";
fi

# update PATH for the Google Cloud SDK.
if [[ -a "${HOME}/google-cloud-sdk/path.zsh.inc" ]]; then 
    . "${HOME}/google-cloud-sdk/path.zsh.inc"; 
fi

# enable shell command completion for gcloud.
if [[ -a "${HOME}/google-cloud-sdk/completion.zsh.inc" ]]; then 
    . "${HOME}/google-cloud-sdk/completion.zsh.inc"; 
fi

# initialize the fzf searcher
if [[ -a "${HOME}/.fzf.zsh" ]]; then
    . "${HOME}/.fzf.zsh";
fi
